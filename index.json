{
  "api/SimpleResults.CreatedGuid.-ctor.html": {
    "href": "api/SimpleResults.CreatedGuid.-ctor.html",
    "title": "Constructor CreatedGuid | SimpleResults",
    "keywords": "Constructor CreatedGuid | Improve this Doc View Source CreatedGuid() Initializes a new instance of the CreatedGuid class. Declaration public CreatedGuid()"
  },
  "api/SimpleResults.CreatedGuid.html": {
    "href": "api/SimpleResults.CreatedGuid.html",
    "title": "Class CreatedGuid | SimpleResults",
    "keywords": "Class CreatedGuid Represents the globally unique identifier (GUID) created for a specific resource. Inheritance Object CreatedGuid Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public sealed class CreatedGuid Constructors Name Description CreatedGuid() Initializes a new instance of the CreatedGuid class. Properties Name Description Id Gets or sets the identification of a resource."
  },
  "api/SimpleResults.CreatedGuid.Id.html": {
    "href": "api/SimpleResults.CreatedGuid.Id.html",
    "title": "Property Id | SimpleResults",
    "keywords": "Property Id | Improve this Doc View Source Id Gets or sets the identification of a resource. Declaration public string Id { get; set; } Property Value Type Description String The identification of a resource. Its default value is an empty string."
  },
  "api/SimpleResults.CreatedId.-ctor.html": {
    "href": "api/SimpleResults.CreatedId.-ctor.html",
    "title": "Constructor CreatedId | SimpleResults",
    "keywords": "Constructor CreatedId | Improve this Doc View Source CreatedId() Initializes a new instance of the CreatedId class. Declaration public CreatedId()"
  },
  "api/SimpleResults.CreatedId.html": {
    "href": "api/SimpleResults.CreatedId.html",
    "title": "Class CreatedId | SimpleResults",
    "keywords": "Class CreatedId Represents the numerical identification (ID) created for a specific resource. Inheritance Object CreatedId Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public sealed class CreatedId Constructors Name Description CreatedId() Initializes a new instance of the CreatedId class. Properties Name Description Id Gets or sets the identification of a resource."
  },
  "api/SimpleResults.CreatedId.Id.html": {
    "href": "api/SimpleResults.CreatedId.Id.html",
    "title": "Property Id | SimpleResults",
    "keywords": "Property Id | Improve this Doc View Source Id Gets or sets the identification of a resource. Declaration public int Id { get; set; } Property Value Type Description Int32"
  },
  "api/SimpleResults.html": {
    "href": "api/SimpleResults.html",
    "title": "Namespace SimpleResults | SimpleResults",
    "keywords": "Namespace SimpleResults Classes CreatedGuid Represents the globally unique identifier (GUID) created for a specific resource. CreatedId Represents the numerical identification (ID) created for a specific resource. ListedResult<T> Represents an enumerated result of an operation. PagedInfo Represents paged information. PagedResult<T> Represents the paged result of an operation. Result Represents the result of an operation that does not return a value. Result<T> Represents the result of an operation that returns a value. ResultBase Represents the result of an operation. ResultExtensions Defines extension methods for the Result object. SRFluentValidationResultExtensions Defines extension methods for the Fluent Validation package. SRModelStateDictionaryExtensions Contains extension methods that convert an instance of ModelStateDictionary into an instance of type Result . TranslateResultToActionResultAttribute Translates the Result object to an ActionResult . Result object can be: Result<T> ListedResult<T> PagedResult<T> Result A subtype of ResultBase . Enums ResultStatus Represents the status of a Result object."
  },
  "api/SimpleResults.ListedResult-1.-ctor.html": {
    "href": "api/SimpleResults.ListedResult-1.-ctor.html",
    "title": "Constructor ListedResult | SimpleResults",
    "keywords": "Constructor ListedResult | Improve this Doc View Source ListedResult() Initializes a new instance of the ListedResult<T> class. Declaration public ListedResult()"
  },
  "api/SimpleResults.ListedResult-1.Data.html": {
    "href": "api/SimpleResults.ListedResult-1.Data.html",
    "title": "Property Data | SimpleResults",
    "keywords": "Property Data | Improve this Doc View Source Data Gets a list of data associated with the result. Declaration public IEnumerable<T> Data { get; set; } Property Value Type Description IEnumerable <T> A list of data associated with the result. Its default value is never a null value."
  },
  "api/SimpleResults.ListedResult-1.html": {
    "href": "api/SimpleResults.ListedResult-1.html",
    "title": "Class ListedResult<T> | SimpleResults",
    "keywords": "Class ListedResult<T> Represents an enumerated result of an operation. Inheritance Object ResultBase ListedResult<T> Inherited Members ResultBase.IsSuccess ResultBase.IsFailed ResultBase.Message ResultBase.Errors ResultBase.Status Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public sealed class ListedResult<T> : ResultBase Type Parameters Name Description T The type of objects to enumerate. Constructors Name Description ListedResult() Initializes a new instance of the ListedResult<T> class. Properties Name Description Data Gets a list of data associated with the result. Operators Name Description Implicit(Result to ListedResult<T>) Converts an instance of type Result to ListedResult<T> . Implicit(Result<T[]> to ListedResult<T>) Converts an instance of type Result<T> to ListedResult<T> . Implicit(Result<IEnumerable<T>> to ListedResult<T>) Converts an instance of type Result<T> to ListedResult<T> . Implicit(Result<List<T>> to ListedResult<T>) Converts an instance of type Result<T> to ListedResult<T> . Extension Methods ResultExtensions.ToActionResult<T>(ListedResult<T>) ResultExtensions.ToHttpResult<T>(ListedResult<T>)"
  },
  "api/SimpleResults.ListedResult-1.op_Implicit.html": {
    "href": "api/SimpleResults.ListedResult-1.op_Implicit.html",
    "title": "Operator Implicit | SimpleResults",
    "keywords": "Operator Implicit | Improve this Doc View Source Implicit(Result to ListedResult<T>) Converts an instance of type Result to ListedResult<T> . Declaration public static implicit operator ListedResult<T>(Result result) Parameters Type Name Description Result result An instance of type Result . Returns Type Description ListedResult <T> | Improve this Doc View Source Implicit(Result<IEnumerable<T>> to ListedResult<T>) Converts an instance of type Result<T> to ListedResult<T> . Declaration public static implicit operator ListedResult<T>(Result<IEnumerable<T>> result) Parameters Type Name Description Result < IEnumerable <T>> result An instance of type Result<T> where T is of type IEnumerable<T> . Returns Type Description ListedResult <T> | Improve this Doc View Source Implicit(Result<List<T>> to ListedResult<T>) Converts an instance of type Result<T> to ListedResult<T> . Declaration public static implicit operator ListedResult<T>(Result<List<T>> result) Parameters Type Name Description Result < List <T>> result An instance of type Result<T> where T is of type List<T> . Returns Type Description ListedResult <T> | Improve this Doc View Source Implicit(Result<T[]> to ListedResult<T>) Converts an instance of type Result<T> to ListedResult<T> . Declaration public static implicit operator ListedResult<T>(Result<T[]> result) Parameters Type Name Description Result <T[]> result An instance of type Result<T> where T is of type Array . Returns Type Description ListedResult <T>"
  },
  "api/SimpleResults.PagedInfo.-ctor.html": {
    "href": "api/SimpleResults.PagedInfo.-ctor.html",
    "title": "Constructor PagedInfo | SimpleResults",
    "keywords": "Constructor PagedInfo | Improve this Doc View Source PagedInfo(Int32, Int32, Int32) Initializes a new instance of the PagedInfo class with the page number, size and total records. Declaration public PagedInfo(int pageNumber, int pageSize, int totalRecords) Parameters Type Name Description Int32 pageNumber The current page number. Int32 pageSize The size per page. Int32 totalRecords The total records of a resource. Exceptions Type Condition DivideByZeroException pageSize is equal to 0."
  },
  "api/SimpleResults.PagedInfo.HasNext.html": {
    "href": "api/SimpleResults.PagedInfo.HasNext.html",
    "title": "Property HasNext | SimpleResults",
    "keywords": "Property HasNext | Improve this Doc View Source HasNext Checks if it has next page. Declaration public bool HasNext { get; } Property Value Type Description Boolean"
  },
  "api/SimpleResults.PagedInfo.HasPrevious.html": {
    "href": "api/SimpleResults.PagedInfo.HasPrevious.html",
    "title": "Property HasPrevious | SimpleResults",
    "keywords": "Property HasPrevious | Improve this Doc View Source HasPrevious Checks if it has previous page. Declaration public bool HasPrevious { get; } Property Value Type Description Boolean"
  },
  "api/SimpleResults.PagedInfo.html": {
    "href": "api/SimpleResults.PagedInfo.html",
    "title": "Class PagedInfo | SimpleResults",
    "keywords": "Class PagedInfo Represents paged information. Inheritance Object PagedInfo Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public class PagedInfo Constructors Name Description PagedInfo(Int32, Int32, Int32) Initializes a new instance of the PagedInfo class with the page number, size and total records. Properties Name Description HasNext Checks if it has next page. HasPrevious Checks if it has previous page. PageNumber Gets the current page number. PageSize Gets the size per page. TotalPages Gets the total number of pages. TotalRecords Gets the total records of a resource."
  },
  "api/SimpleResults.PagedInfo.PageNumber.html": {
    "href": "api/SimpleResults.PagedInfo.PageNumber.html",
    "title": "Property PageNumber | SimpleResults",
    "keywords": "Property PageNumber | Improve this Doc View Source PageNumber Gets the current page number. Declaration public int PageNumber { get; } Property Value Type Description Int32"
  },
  "api/SimpleResults.PagedInfo.PageSize.html": {
    "href": "api/SimpleResults.PagedInfo.PageSize.html",
    "title": "Property PageSize | SimpleResults",
    "keywords": "Property PageSize | Improve this Doc View Source PageSize Gets the size per page. Declaration public int PageSize { get; } Property Value Type Description Int32"
  },
  "api/SimpleResults.PagedInfo.TotalPages.html": {
    "href": "api/SimpleResults.PagedInfo.TotalPages.html",
    "title": "Property TotalPages | SimpleResults",
    "keywords": "Property TotalPages | Improve this Doc View Source TotalPages Gets the total number of pages. Declaration public int TotalPages { get; } Property Value Type Description Int32"
  },
  "api/SimpleResults.PagedInfo.TotalRecords.html": {
    "href": "api/SimpleResults.PagedInfo.TotalRecords.html",
    "title": "Property TotalRecords | SimpleResults",
    "keywords": "Property TotalRecords | Improve this Doc View Source TotalRecords Gets the total records of a resource. Declaration public int TotalRecords { get; } Property Value Type Description Int32"
  },
  "api/SimpleResults.PagedResult-1.-ctor.html": {
    "href": "api/SimpleResults.PagedResult-1.-ctor.html",
    "title": "Constructor PagedResult | SimpleResults",
    "keywords": "Constructor PagedResult | Improve this Doc View Source PagedResult() Initializes a new instance of the PagedResult<T> class. Declaration public PagedResult()"
  },
  "api/SimpleResults.PagedResult-1.Data.html": {
    "href": "api/SimpleResults.PagedResult-1.Data.html",
    "title": "Property Data | SimpleResults",
    "keywords": "Property Data | Improve this Doc View Source Data Gets the data of a page. Declaration public IEnumerable<T> Data { get; set; } Property Value Type Description IEnumerable <T> The data of a page. Its default value is never a null value."
  },
  "api/SimpleResults.PagedResult-1.html": {
    "href": "api/SimpleResults.PagedResult-1.html",
    "title": "Class PagedResult<T> | SimpleResults",
    "keywords": "Class PagedResult<T> Represents the paged result of an operation. Inheritance Object ResultBase PagedResult<T> Inherited Members ResultBase.IsSuccess ResultBase.IsFailed ResultBase.Message ResultBase.Errors ResultBase.Status Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public sealed class PagedResult<T> : ResultBase Type Parameters Name Description T The type of objects to enumerate. Constructors Name Description PagedResult() Initializes a new instance of the PagedResult<T> class. Properties Name Description Data Gets the data of a page. PagedInfo Gets information about the page. Operators Name Description Implicit(Result to PagedResult<T>) Converts an instance of type Result to PagedResult<T> . Extension Methods ResultExtensions.ToActionResult<T>(PagedResult<T>) ResultExtensions.ToHttpResult<T>(PagedResult<T>)"
  },
  "api/SimpleResults.PagedResult-1.op_Implicit.html": {
    "href": "api/SimpleResults.PagedResult-1.op_Implicit.html",
    "title": "Operator Implicit | SimpleResults",
    "keywords": "Operator Implicit | Improve this Doc View Source Implicit(Result to PagedResult<T>) Converts an instance of type Result to PagedResult<T> . Declaration public static implicit operator PagedResult<T>(Result result) Parameters Type Name Description Result result An instance of type Result . Returns Type Description PagedResult <T>"
  },
  "api/SimpleResults.PagedResult-1.PagedInfo.html": {
    "href": "api/SimpleResults.PagedResult-1.PagedInfo.html",
    "title": "Property PagedInfo | SimpleResults",
    "keywords": "Property PagedInfo | Improve this Doc View Source PagedInfo Gets information about the page. Declaration public PagedInfo PagedInfo { get; set; } Property Value Type Description PagedInfo The information about the page. Its default value is null ."
  },
  "api/SimpleResults.Result.Conflict.html": {
    "href": "api/SimpleResults.Result.Conflict.html",
    "title": "Method Conflict | SimpleResults",
    "keywords": "Method Conflict | Improve this Doc View Source Conflict() Represents a situation where a service is in conflict due to the current state of a resource. Declaration public static Result Conflict() Returns Type Description Result | Improve this Doc View Source Conflict(String) Represents a situation where a service is in conflict due to the current state of a resource. Declaration public static Result Conflict(string message) Parameters Type Name Description String message An error message. Returns Type Description Result | Improve this Doc View Source Conflict(IEnumerable<String>) Represents a situation where a service is in conflict due to the current state of a resource. Declaration public static Result Conflict(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < String > errors A collection of string that contains error messages. Returns Type Description Result | Improve this Doc View Source Conflict(String, IEnumerable<String>) Represents a situation where a service is in conflict due to the current state of a resource. Declaration public static Result Conflict(string message, IEnumerable<string> errors) Parameters Type Name Description String message A general description of the error. IEnumerable < String > errors A collection of errors. Returns Type Description Result"
  },
  "api/SimpleResults.Result.CreatedResource.html": {
    "href": "api/SimpleResults.Result.CreatedResource.html",
    "title": "Method CreatedResource | SimpleResults",
    "keywords": "Method CreatedResource | Improve this Doc View Source CreatedResource() Represents a situation in which the service successfully creates a resource. Declaration public static Result CreatedResource() Returns Type Description Result | Improve this Doc View Source CreatedResource(String) Represents a situation in which the service successfully creates a resource. Declaration public static Result CreatedResource(string message) Parameters Type Name Description String message A message of success. Returns Type Description Result | Improve this Doc View Source CreatedResource(Int32) Represents a situation in which the service successfully creates a resource. Declaration public static Result<CreatedId> CreatedResource(int id) Parameters Type Name Description Int32 id Returns Type Description Result < CreatedId > | Improve this Doc View Source CreatedResource(Int32, String) Represents a situation in which the service successfully creates a resource. Declaration public static Result<CreatedId> CreatedResource(int id, string message) Parameters Type Name Description Int32 id The ID of the created resource. String message A message of success. Returns Type Description Result < CreatedId > | Improve this Doc View Source CreatedResource(Guid) Represents a situation in which the service successfully creates a resource. Declaration public static Result<CreatedGuid> CreatedResource(Guid guid) Parameters Type Name Description Guid guid Returns Type Description Result < CreatedGuid > | Improve this Doc View Source CreatedResource(Guid, String) Represents a situation in which the service successfully creates a resource. Declaration public static Result<CreatedGuid> CreatedResource(Guid guid, string message) Parameters Type Name Description Guid guid The GUID assigned to the resource. String message A message of success. Returns Type Description Result < CreatedGuid >"
  },
  "api/SimpleResults.Result.CriticalError.html": {
    "href": "api/SimpleResults.Result.CriticalError.html",
    "title": "Method CriticalError | SimpleResults",
    "keywords": "Method CriticalError | Improve this Doc View Source CriticalError() Represents a situation where a service detects unexpected behavior (critical error) and does not know how to handle it. Declaration public static Result CriticalError() Returns Type Description Result Remarks Everything provided by the user was valid, but the service was unable to complete due to an exception. | Improve this Doc View Source CriticalError(String) Represents a situation where a service detects unexpected behavior (critical error) and does not know how to handle it. Declaration public static Result CriticalError(string message) Parameters Type Name Description String message An error message. Returns Type Description Result Remarks Everything provided by the user was valid, but the service was unable to complete due to an exception. | Improve this Doc View Source CriticalError(IEnumerable<String>) Represents a situation where a service detects unexpected behavior (critical error) and does not know how to handle it. Declaration public static Result CriticalError(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < String > errors A collection of string that contains error messages. Returns Type Description Result Remarks Everything provided by the user was valid, but the service was unable to complete due to an exception. | Improve this Doc View Source CriticalError(String, IEnumerable<String>) Represents a situation where a service detects unexpected behavior (critical error) and does not know how to handle it. Declaration public static Result CriticalError(string message, IEnumerable<string> errors) Parameters Type Name Description String message A general description of the error. IEnumerable < String > errors A collection of errors. Returns Type Description Result Remarks Everything provided by the user was valid, but the service was unable to complete due to an exception."
  },
  "api/SimpleResults.Result.-ctor.html": {
    "href": "api/SimpleResults.Result.-ctor.html",
    "title": "Constructor Result | SimpleResults",
    "keywords": "Constructor Result | Improve this Doc View Source Result() Initializes a new instance of the Result class. Declaration public Result()"
  },
  "api/SimpleResults.Result.DeletedResource.html": {
    "href": "api/SimpleResults.Result.DeletedResource.html",
    "title": "Method DeletedResource | SimpleResults",
    "keywords": "Method DeletedResource | Improve this Doc View Source DeletedResource() Represents a situation in which the service successfully deletes a resource. Declaration public static Result DeletedResource() Returns Type Description Result"
  },
  "api/SimpleResults.Result.Failure.html": {
    "href": "api/SimpleResults.Result.Failure.html",
    "title": "Method Failure | SimpleResults",
    "keywords": "Method Failure | Improve this Doc View Source Failure() Represents an error that occurred during the execution of a service. Declaration public static Result Failure() Returns Type Description Result | Improve this Doc View Source Failure(String) Represents an error that occurred during the execution of a service. Declaration public static Result Failure(string message) Parameters Type Name Description String message An error message. Returns Type Description Result | Improve this Doc View Source Failure(IEnumerable<String>) Represents an error that occurred during the execution of a service. Declaration public static Result Failure(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < String > errors A collection of string that contains error messages. Returns Type Description Result | Improve this Doc View Source Failure(String, IEnumerable<String>) Represents an error that occurred during the execution of a service. Declaration public static Result Failure(string message, IEnumerable<string> errors) Parameters Type Name Description String message A general description of the error. IEnumerable < String > errors A collection of errors. Returns Type Description Result"
  },
  "api/SimpleResults.Result.Forbidden.html": {
    "href": "api/SimpleResults.Result.Forbidden.html",
    "title": "Method Forbidden | SimpleResults",
    "keywords": "Method Forbidden | Improve this Doc View Source Forbidden() Represents a situation where the user does not have permission to perform some action. Declaration public static Result Forbidden() Returns Type Description Result | Improve this Doc View Source Forbidden(String) Represents a situation where the user does not have permission to perform some action. Declaration public static Result Forbidden(string message) Parameters Type Name Description String message An error message. Returns Type Description Result | Improve this Doc View Source Forbidden(IEnumerable<String>) Represents a situation where the user does not have permission to perform some action. Declaration public static Result Forbidden(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < String > errors A collection of string that contains error messages. Returns Type Description Result | Improve this Doc View Source Forbidden(String, IEnumerable<String>) Represents a situation where the user does not have permission to perform some action. Declaration public static Result Forbidden(string message, IEnumerable<string> errors) Parameters Type Name Description String message A general description of the error. IEnumerable < String > errors A collection of errors. Returns Type Description Result"
  },
  "api/SimpleResults.Result.html": {
    "href": "api/SimpleResults.Result.html",
    "title": "Class Result | SimpleResults",
    "keywords": "Class Result Represents the result of an operation that does not return a value. Inheritance Object ResultBase Result Inherited Members ResultBase.IsSuccess ResultBase.IsFailed ResultBase.Message ResultBase.Errors ResultBase.Status Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public sealed class Result : ResultBase Remarks This class defines different types of results for an operation. For example: Result.Invalid , Result.NotFound , among others. Constructors Name Description Result() Initializes a new instance of the Result class. Methods Name Description Conflict() Represents a situation where a service is in conflict due to the current state of a resource. Conflict(IEnumerable<String>) Represents a situation where a service is in conflict due to the current state of a resource. Conflict(String) Represents a situation where a service is in conflict due to the current state of a resource. Conflict(String, IEnumerable<String>) Represents a situation where a service is in conflict due to the current state of a resource. CreatedResource() Represents a situation in which the service successfully creates a resource. CreatedResource(Guid) Represents a situation in which the service successfully creates a resource. CreatedResource(Guid, String) Represents a situation in which the service successfully creates a resource. CreatedResource(Int32) Represents a situation in which the service successfully creates a resource. CreatedResource(Int32, String) Represents a situation in which the service successfully creates a resource. CreatedResource(String) Represents a situation in which the service successfully creates a resource. CriticalError() Represents a situation where a service detects unexpected behavior (critical error) and does not know how to handle it. CriticalError(IEnumerable<String>) Represents a situation where a service detects unexpected behavior (critical error) and does not know how to handle it. CriticalError(String) Represents a situation where a service detects unexpected behavior (critical error) and does not know how to handle it. CriticalError(String, IEnumerable<String>) Represents a situation where a service detects unexpected behavior (critical error) and does not know how to handle it. DeletedResource() Represents a situation in which the service successfully deletes a resource. Failure() Represents an error that occurred during the execution of a service. Failure(IEnumerable<String>) Represents an error that occurred during the execution of a service. Failure(String) Represents an error that occurred during the execution of a service. Failure(String, IEnumerable<String>) Represents an error that occurred during the execution of a service. Forbidden() Represents a situation where the user does not have permission to perform some action. Forbidden(IEnumerable<String>) Represents a situation where the user does not have permission to perform some action. Forbidden(String) Represents a situation where the user does not have permission to perform some action. Forbidden(String, IEnumerable<String>) Represents a situation where the user does not have permission to perform some action. Invalid() Represents a validation error that prevents the underlying service from completing. Invalid(IEnumerable<String>) Represents a validation error that prevents the underlying service from completing. Invalid(String) Represents a validation error that prevents the underlying service from completing. Invalid(String, IEnumerable<String>) Represents a validation error that prevents the underlying service from completing. NotFound() Represents the situation where a service was unable to find a requested resource. NotFound(IEnumerable<String>) Represents the situation where a service was unable to find a requested resource. NotFound(String) Represents the situation where a service was unable to find a requested resource. NotFound(String, IEnumerable<String>) Represents the situation where a service was unable to find a requested resource. ObtainedResource<T>(T) Represents a situation in which the service successfully obtains a resource. ObtainedResources<T>(IEnumerable<T>) Represents a situation in which the service successfully obtains multiple resources. Success() Represents a successful operation. Success(String) Represents a successful operation and accepts a messages that describes the result. Success<T>(T) Represents a successful operation and accepts a values as the result of the operation. Success<T>(T, String) Represents a successful operation and accepts a values as the result of the operation. Success<T>(IEnumerable<T>, PagedInfo) Represents a successful operation and accepts a set of data and paged information as arguments. Success<T>(IEnumerable<T>, PagedInfo, String) Represents a successful operation and accepts a set of data and paged information as arguments. ToListedResult<T>(IEnumerable<T>) Converts an instance of type Result to ListedResult<T> . ToPagedResult<T>(IEnumerable<T>, PagedInfo) Converts an instance of type Result to PagedResult<T> . ToResult<T>(T) Converts an instance of type Result to Result<T> . Unauthorized() Represents a situation where a user does not have valid authentication credentials for the target resource. Unauthorized(IEnumerable<String>) Represents a situation where a user does not have valid authentication credentials for the target resource. Unauthorized(String) Represents a situation where a user does not have valid authentication credentials for the target resource. Unauthorized(String, IEnumerable<String>) Represents a situation where a user does not have valid authentication credentials for the target resource. UpdatedResource() Represents a situation in which the service successfully updates a resource. Extension Methods ResultExtensions.ToActionResult(Result) ResultExtensions.ToHttpResult(Result)"
  },
  "api/SimpleResults.Result.Invalid.html": {
    "href": "api/SimpleResults.Result.Invalid.html",
    "title": "Method Invalid | SimpleResults",
    "keywords": "Method Invalid | Improve this Doc View Source Invalid() Represents a validation error that prevents the underlying service from completing. Declaration public static Result Invalid() Returns Type Description Result Remarks Used in situations where the consumer provides invalid data. | Improve this Doc View Source Invalid(String) Represents a validation error that prevents the underlying service from completing. Declaration public static Result Invalid(string message) Parameters Type Name Description String message An error message. Returns Type Description Result Remarks Used in situations where the consumer provides invalid data. | Improve this Doc View Source Invalid(IEnumerable<String>) Represents a validation error that prevents the underlying service from completing. Declaration public static Result Invalid(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < String > errors A collection of string that contains error messages. Returns Type Description Result Remarks Used in situations where the consumer provides invalid data. | Improve this Doc View Source Invalid(String, IEnumerable<String>) Represents a validation error that prevents the underlying service from completing. Declaration public static Result Invalid(string message, IEnumerable<string> errors) Parameters Type Name Description String message A general description of the error. IEnumerable < String > errors A collection of errors. Returns Type Description Result Remarks Used in situations where the consumer provides invalid data."
  },
  "api/SimpleResults.Result.NotFound.html": {
    "href": "api/SimpleResults.Result.NotFound.html",
    "title": "Method NotFound | SimpleResults",
    "keywords": "Method NotFound | Improve this Doc View Source NotFound() Represents the situation where a service was unable to find a requested resource. Declaration public static Result NotFound() Returns Type Description Result | Improve this Doc View Source NotFound(String) Represents the situation where a service was unable to find a requested resource. Declaration public static Result NotFound(string message) Parameters Type Name Description String message An error message. Returns Type Description Result | Improve this Doc View Source NotFound(IEnumerable<String>) Represents the situation where a service was unable to find a requested resource. Declaration public static Result NotFound(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < String > errors A collection of string that contains error messages. Returns Type Description Result | Improve this Doc View Source NotFound(String, IEnumerable<String>) Represents the situation where a service was unable to find a requested resource. Declaration public static Result NotFound(string message, IEnumerable<string> errors) Parameters Type Name Description String message A general description of the error. IEnumerable < String > errors A collection of errors. Returns Type Description Result"
  },
  "api/SimpleResults.Result.ObtainedResource.html": {
    "href": "api/SimpleResults.Result.ObtainedResource.html",
    "title": "Method ObtainedResource | SimpleResults",
    "keywords": "Method ObtainedResource | Improve this Doc View Source ObtainedResource<T>(T) Represents a situation in which the service successfully obtains a resource. Declaration public static Result<T> ObtainedResource<T>(T data) Parameters Type Name Description T data The value to be set. Returns Type Description Result <T> Type Parameters Name Description T"
  },
  "api/SimpleResults.Result.ObtainedResources.html": {
    "href": "api/SimpleResults.Result.ObtainedResources.html",
    "title": "Method ObtainedResources | SimpleResults",
    "keywords": "Method ObtainedResources | Improve this Doc View Source ObtainedResources<T>(IEnumerable<T>) Represents a situation in which the service successfully obtains multiple resources. Declaration public static ListedResult<T> ObtainedResources<T>(IEnumerable<T> data) Parameters Type Name Description IEnumerable <T> data A set of data. Returns Type Description ListedResult <T> Type Parameters Name Description T"
  },
  "api/SimpleResults.Result.Success.html": {
    "href": "api/SimpleResults.Result.Success.html",
    "title": "Method Success | SimpleResults",
    "keywords": "Method Success | Improve this Doc View Source Success<T>(T) Represents a successful operation and accepts a values as the result of the operation. Declaration public static Result<T> Success<T>(T data) Parameters Type Name Description T data Returns Type Description Result <T> Type Parameters Name Description T | Improve this Doc View Source Success<T>(T, String) Represents a successful operation and accepts a values as the result of the operation. Declaration public static Result<T> Success<T>(T data, string message) Parameters Type Name Description T data The value to be set. String message A message of success. Returns Type Description Result <T> Type Parameters Name Description T | Improve this Doc View Source Success<T>(IEnumerable<T>, PagedInfo) Represents a successful operation and accepts a set of data and paged information as arguments. Declaration public static PagedResult<T> Success<T>(IEnumerable<T> data, PagedInfo pagedInfo) Parameters Type Name Description IEnumerable <T> data PagedInfo pagedInfo Returns Type Description PagedResult <T> Type Parameters Name Description T | Improve this Doc View Source Success<T>(IEnumerable<T>, PagedInfo, String) Represents a successful operation and accepts a set of data and paged information as arguments. Declaration public static PagedResult<T> Success<T>(IEnumerable<T> data, PagedInfo pagedInfo, string message) Parameters Type Name Description IEnumerable <T> data A set of data. PagedInfo pagedInfo Some information about the page. String message A message of success. Returns Type Description PagedResult <T> Type Parameters Name Description T | Improve this Doc View Source Success() Represents a successful operation. Declaration public static Result Success() Returns Type Description Result | Improve this Doc View Source Success(String) Represents a successful operation and accepts a messages that describes the result. Declaration public static Result Success(string message) Parameters Type Name Description String message A message of success. Returns Type Description Result"
  },
  "api/SimpleResults.Result.ToListedResult.html": {
    "href": "api/SimpleResults.Result.ToListedResult.html",
    "title": "Method ToListedResult | SimpleResults",
    "keywords": "Method ToListedResult | Improve this Doc View Source ToListedResult<T>(IEnumerable<T>) Converts an instance of type Result to ListedResult<T> . Declaration public ListedResult<T> ToListedResult<T>(IEnumerable<T> data) Parameters Type Name Description IEnumerable <T> data The value to be set. Returns Type Description ListedResult <T> An instance of type ListedResult<T> . Type Parameters Name Description T The type of objects to enumerate."
  },
  "api/SimpleResults.Result.ToPagedResult.html": {
    "href": "api/SimpleResults.Result.ToPagedResult.html",
    "title": "Method ToPagedResult | SimpleResults",
    "keywords": "Method ToPagedResult | Improve this Doc View Source ToPagedResult<T>(IEnumerable<T>, PagedInfo) Converts an instance of type Result to PagedResult<T> . Declaration public PagedResult<T> ToPagedResult<T>(IEnumerable<T> data, PagedInfo pagedInfo) Parameters Type Name Description IEnumerable <T> data The value to be set. PagedInfo pagedInfo Some information about the page. Returns Type Description PagedResult <T> An instance of type PagedResult<T> . Type Parameters Name Description T The type of objects to enumerate."
  },
  "api/SimpleResults.Result.ToResult.html": {
    "href": "api/SimpleResults.Result.ToResult.html",
    "title": "Method ToResult | SimpleResults",
    "keywords": "Method ToResult | Improve this Doc View Source ToResult<T>(T) Converts an instance of type Result to Result<T> . Declaration public Result<T> ToResult<T>(T data) Parameters Type Name Description T data The value to be set. Returns Type Description Result <T> An instance of type Result<T> . Type Parameters Name Description T A value associated to the result."
  },
  "api/SimpleResults.Result.Unauthorized.html": {
    "href": "api/SimpleResults.Result.Unauthorized.html",
    "title": "Method Unauthorized | SimpleResults",
    "keywords": "Method Unauthorized | Improve this Doc View Source Unauthorized() Represents a situation where a user does not have valid authentication credentials for the target resource. Declaration public static Result Unauthorized() Returns Type Description Result Remarks Similar to Forbidden() , but specifically for use when authentication is required and has failed or has not yet been provided. | Improve this Doc View Source Unauthorized(String) Represents a situation where a user does not have valid authentication credentials for the target resource. Declaration public static Result Unauthorized(string message) Parameters Type Name Description String message An error message. Returns Type Description Result Remarks Similar to Forbidden() , but specifically for use when authentication is required and has failed or has not yet been provided. | Improve this Doc View Source Unauthorized(IEnumerable<String>) Represents a situation where a user does not have valid authentication credentials for the target resource. Declaration public static Result Unauthorized(IEnumerable<string> errors) Parameters Type Name Description IEnumerable < String > errors A collection of string that contains error messages. Returns Type Description Result Remarks Similar to Forbidden() , but specifically for use when authentication is required and has failed or has not yet been provided. | Improve this Doc View Source Unauthorized(String, IEnumerable<String>) Represents a situation where a user does not have valid authentication credentials for the target resource. Declaration public static Result Unauthorized(string message, IEnumerable<string> errors) Parameters Type Name Description String message A general description of the error. IEnumerable < String > errors A collection of errors. Returns Type Description Result Remarks Similar to Forbidden() , but specifically for use when authentication is required and has failed or has not yet been provided."
  },
  "api/SimpleResults.Result.UpdatedResource.html": {
    "href": "api/SimpleResults.Result.UpdatedResource.html",
    "title": "Method UpdatedResource | SimpleResults",
    "keywords": "Method UpdatedResource | Improve this Doc View Source UpdatedResource() Represents a situation in which the service successfully updates a resource. Declaration public static Result UpdatedResource() Returns Type Description Result"
  },
  "api/SimpleResults.Result-1.-ctor.html": {
    "href": "api/SimpleResults.Result-1.-ctor.html",
    "title": "Constructor Result | SimpleResults",
    "keywords": "Constructor Result | Improve this Doc View Source Result() Initializes a new instance of the Result<T> class. Declaration public Result()"
  },
  "api/SimpleResults.Result-1.Data.html": {
    "href": "api/SimpleResults.Result-1.Data.html",
    "title": "Property Data | SimpleResults",
    "keywords": "Property Data | Improve this Doc View Source Data Gets the data associated with the result. Declaration public T Data { get; set; } Property Value Type Description T The data associated with the result. Its default value is null ."
  },
  "api/SimpleResults.Result-1.html": {
    "href": "api/SimpleResults.Result-1.html",
    "title": "Class Result<T> | SimpleResults",
    "keywords": "Class Result<T> Represents the result of an operation that returns a value. Inheritance Object ResultBase Result<T> Inherited Members ResultBase.IsSuccess ResultBase.IsFailed ResultBase.Message ResultBase.Errors ResultBase.Status Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public sealed class Result<T> : ResultBase Type Parameters Name Description T A value associated to the result. Constructors Name Description Result() Initializes a new instance of the Result<T> class. Properties Name Description Data Gets the data associated with the result. Operators Name Description Implicit(T to Result<T>) Converts the value of type T to an instance of type Result<T> . Implicit(Result to Result<T>) Converts an instance of type Result to Result<T> . Implicit(Result<T> to T) Converts an instance of type Result<T> to the value of type T . Extension Methods ResultExtensions.ToActionResult<T>(Result<T>) ResultExtensions.ToHttpResult<T>(Result<T>)"
  },
  "api/SimpleResults.Result-1.op_Implicit.html": {
    "href": "api/SimpleResults.Result-1.op_Implicit.html",
    "title": "Operator Implicit | SimpleResults",
    "keywords": "Operator Implicit | Improve this Doc View Source Implicit(Result to Result<T>) Converts an instance of type Result to Result<T> . Declaration public static implicit operator Result<T>(Result result) Parameters Type Name Description Result result An instance of type Result . Returns Type Description Result <T> | Improve this Doc View Source Implicit(T to Result<T>) Converts the value of type T to an instance of type Result<T> . Declaration public static implicit operator Result<T>(T value) Parameters Type Name Description T value An instance of type T that represents the value. Returns Type Description Result <T> | Improve this Doc View Source Implicit(Result<T> to T) Converts an instance of type Result<T> to the value of type T . Declaration public static implicit operator T(Result<T> result) Parameters Type Name Description Result <T> result An instance of type Result<T> . Returns Type Description T"
  },
  "api/SimpleResults.ResultBase.Errors.html": {
    "href": "api/SimpleResults.ResultBase.Errors.html",
    "title": "Property Errors | SimpleResults",
    "keywords": "Property Errors | Improve this Doc View Source Errors Gets a collection of errors. Declaration public IEnumerable<string> Errors { get; set; } Property Value Type Description IEnumerable < String > A collection that contains error messages. Its default value is never a null value."
  },
  "api/SimpleResults.ResultBase.html": {
    "href": "api/SimpleResults.ResultBase.html",
    "title": "Class ResultBase | SimpleResults",
    "keywords": "Class ResultBase Represents the result of an operation. Inheritance Object ResultBase ListedResult<T> PagedResult<T> Result Result<T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public abstract class ResultBase Properties Name Description Errors Gets a collection of errors. IsFailed A value that indicates that the result was a failure. IsSuccess A value indicating that the result was successful. Message Gets the description of a result. Status Gets the current status of a result."
  },
  "api/SimpleResults.ResultBase.IsFailed.html": {
    "href": "api/SimpleResults.ResultBase.IsFailed.html",
    "title": "Property IsFailed | SimpleResults",
    "keywords": "Property IsFailed | Improve this Doc View Source IsFailed A value that indicates that the result was a failure. Declaration [JsonIgnore] public bool IsFailed { get; } Property Value Type Description Boolean"
  },
  "api/SimpleResults.ResultBase.IsSuccess.html": {
    "href": "api/SimpleResults.ResultBase.IsSuccess.html",
    "title": "Property IsSuccess | SimpleResults",
    "keywords": "Property IsSuccess | Improve this Doc View Source IsSuccess A value indicating that the result was successful. Declaration [JsonPropertyName(\"success\")] public bool IsSuccess { get; set; } Property Value Type Description Boolean"
  },
  "api/SimpleResults.ResultBase.Message.html": {
    "href": "api/SimpleResults.ResultBase.Message.html",
    "title": "Property Message | SimpleResults",
    "keywords": "Property Message | Improve this Doc View Source Message Gets the description of a result. Declaration public string Message { get; set; } Property Value Type Description String The description of a result. Its default value is never a null value."
  },
  "api/SimpleResults.ResultBase.Status.html": {
    "href": "api/SimpleResults.ResultBase.Status.html",
    "title": "Property Status | SimpleResults",
    "keywords": "Property Status | Improve this Doc View Source Status Gets the current status of a result. Declaration [JsonIgnore] public ResultStatus Status { get; set; } Property Value Type Description ResultStatus The current status of a result. Its default value is a Failure ."
  },
  "api/SimpleResults.ResultExtensions.html": {
    "href": "api/SimpleResults.ResultExtensions.html",
    "title": "Class ResultExtensions | SimpleResults",
    "keywords": "Class ResultExtensions Defines extension methods for the Result object. Inheritance Object ResultExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.AspNetCore.dll Syntax public static class ResultExtensions Methods Name Description ToActionResult(Result) Converts the Result to ActionResult<TValue> where TValue is a Result . ToActionResult<T>(ListedResult<T>) Converts the ListedResult<T> to ActionResult<TValue> where TValue is a ListedResult<T> . ToActionResult<T>(PagedResult<T>) Converts the PagedResult<T> to ActionResult<TValue> where TValue is a PagedResult<T> . ToActionResult<T>(Result<T>) Converts the Result<T> to ActionResult<TValue> where TValue is a Result<T> . ToHttpResult(Result) Converts the Result to an implementation of IResult . ToHttpResult<T>(ListedResult<T>) Converts the ListedResult<T> to an implementation of IResult . ToHttpResult<T>(PagedResult<T>) Converts the PagedResult<T> to an implementation of IResult . ToHttpResult<T>(Result<T>) Converts the Result<T> to an implementation of IResult ."
  },
  "api/SimpleResults.ResultExtensions.ToActionResult.html": {
    "href": "api/SimpleResults.ResultExtensions.ToActionResult.html",
    "title": "Method ToActionResult | SimpleResults",
    "keywords": "Method ToActionResult | Improve this Doc View Source ToActionResult<T>(PagedResult<T>) Converts the PagedResult<T> to ActionResult<TValue> where TValue is a PagedResult<T> . Declaration public static ActionResult<PagedResult<T>> ToActionResult<T>(this PagedResult<T> result) Parameters Type Name Description PagedResult <T> result An instance of type PagedResult<T> . Returns Type Description ActionResult < PagedResult <T>> An instance of type ActionResult<TValue> where TValue is a PagedResult<T> . Type Parameters Name Description T The type of objects to enumerate. Exceptions Type Condition NotSupportedException Status is invalid. | Improve this Doc View Source ToActionResult<T>(ListedResult<T>) Converts the ListedResult<T> to ActionResult<TValue> where TValue is a ListedResult<T> . Declaration public static ActionResult<ListedResult<T>> ToActionResult<T>(this ListedResult<T> result) Parameters Type Name Description ListedResult <T> result An instance of type ListedResult<T> . Returns Type Description ActionResult < ListedResult <T>> An instance of type ActionResult<TValue> where TValue is a ListedResult<T> . Type Parameters Name Description T The type of objects to enumerate. Exceptions Type Condition NotSupportedException Status is invalid. | Improve this Doc View Source ToActionResult<T>(Result<T>) Converts the Result<T> to ActionResult<TValue> where TValue is a Result<T> . Declaration public static ActionResult<Result<T>> ToActionResult<T>(this Result<T> result) Parameters Type Name Description Result <T> result An instance of type Result<T> . Returns Type Description ActionResult < Result <T>> An instance of type ActionResult<TValue> where TValue is a Result<T> . Type Parameters Name Description T A value associated to the result. Exceptions Type Condition NotSupportedException Status is invalid. | Improve this Doc View Source ToActionResult(Result) Converts the Result to ActionResult<TValue> where TValue is a Result . Declaration public static ActionResult<Result> ToActionResult(this Result result) Parameters Type Name Description Result result An instance of type Result . Returns Type Description ActionResult < Result > An instance of type ActionResult<TValue> where TValue is a Result . Exceptions Type Condition NotSupportedException Status is invalid."
  },
  "api/SimpleResults.ResultExtensions.ToHttpResult.html": {
    "href": "api/SimpleResults.ResultExtensions.ToHttpResult.html",
    "title": "Method ToHttpResult | SimpleResults",
    "keywords": "Method ToHttpResult | Improve this Doc View Source ToHttpResult<T>(PagedResult<T>) Converts the PagedResult<T> to an implementation of IResult . Declaration public static IResult ToHttpResult<T>(this PagedResult<T> result) Parameters Type Name Description PagedResult <T> result An instance of type PagedResult<T> . Returns Type Description IResult An instance of IResult . Type Parameters Name Description T The type of objects to enumerate. Exceptions Type Condition NotSupportedException Status is invalid. | Improve this Doc View Source ToHttpResult<T>(ListedResult<T>) Converts the ListedResult<T> to an implementation of IResult . Declaration public static IResult ToHttpResult<T>(this ListedResult<T> result) Parameters Type Name Description ListedResult <T> result An instance of type ListedResult<T> . Returns Type Description IResult An instance of IResult . Type Parameters Name Description T The type of objects to enumerate. Exceptions Type Condition NotSupportedException Status is invalid. | Improve this Doc View Source ToHttpResult<T>(Result<T>) Converts the Result<T> to an implementation of IResult . Declaration public static IResult ToHttpResult<T>(this Result<T> result) Parameters Type Name Description Result <T> result An instance of type Result<T> . Returns Type Description IResult An instance of IResult . Type Parameters Name Description T A value associated to the result. Exceptions Type Condition NotSupportedException Status is invalid. | Improve this Doc View Source ToHttpResult(Result) Converts the Result to an implementation of IResult . Declaration public static IResult ToHttpResult(this Result result) Parameters Type Name Description Result result An instance of type Result . Returns Type Description IResult An instance of IResult . Exceptions Type Condition NotSupportedException Status is invalid."
  },
  "api/SimpleResults.ResultStatus.html": {
    "href": "api/SimpleResults.ResultStatus.html",
    "title": "Enum ResultStatus | SimpleResults",
    "keywords": "Enum ResultStatus Represents the status of a Result object. Namespace : SimpleResults Assembly : SimpleResults.dll Syntax public enum ResultStatus Fields Name Description Conflict Represents a status where a service is in conflict due to the current state of a resource. Created Represents a status in which the service successfully creates a resource. CriticalError Represents a status where unexpected behavior has occurred and the service does not know how to handle it (e.g., database connection error). Failure Represents a failed status. Forbidden Represents a status where the user does not have permission to perform some action. Invalid Represents a status in which the consumer has provided invalid data. NotFound Represents a status where a service was unable to find a requested resource. Ok Represents a successful status. Unauthorized Represents a status where a user does not have valid authentication credentials for the target resource."
  },
  "api/SimpleResults.SRFluentValidationResultExtensions.AsErrors.html": {
    "href": "api/SimpleResults.SRFluentValidationResultExtensions.AsErrors.html",
    "title": "Method AsErrors | SimpleResults",
    "keywords": "Method AsErrors | Improve this Doc View Source AsErrors(ValidationResult) Converts the validation result to a collection of error messages. Declaration public static IEnumerable<string> AsErrors(this ValidationResult result) Parameters Type Name Description FluentValidation.Results.ValidationResult result The result of running a validator. Returns Type Description IEnumerable < String > A collection that contains error messages."
  },
  "api/SimpleResults.SRFluentValidationResultExtensions.html": {
    "href": "api/SimpleResults.SRFluentValidationResultExtensions.html",
    "title": "Class SRFluentValidationResultExtensions | SimpleResults",
    "keywords": "Class SRFluentValidationResultExtensions Defines extension methods for the Fluent Validation package. Inheritance Object SRFluentValidationResultExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.FluentValidation.dll Syntax public static class SRFluentValidationResultExtensions Methods Name Description AsErrors(ValidationResult) Converts the validation result to a collection of error messages. Invalid(ValidationResult) Represents a validation error that prevents the underlying service from completing. Invalid(ValidationResult, String) Represents a validation error that prevents the underlying service from completing. IsFailed(ValidationResult) Checks if the validation result is failed."
  },
  "api/SimpleResults.SRFluentValidationResultExtensions.Invalid.html": {
    "href": "api/SimpleResults.SRFluentValidationResultExtensions.Invalid.html",
    "title": "Method Invalid | SimpleResults",
    "keywords": "Method Invalid | Improve this Doc View Source Invalid(ValidationResult) Represents a validation error that prevents the underlying service from completing. Declaration public static Result Invalid(this ValidationResult result) Parameters Type Name Description FluentValidation.Results.ValidationResult result The result of running a validator. Returns Type Description Result An instance of type Result that does not contain a value. Remarks Used in situations where the consumer provides invalid data. | Improve this Doc View Source Invalid(ValidationResult, String) Represents a validation error that prevents the underlying service from completing. Declaration public static Result Invalid(this ValidationResult result, string message) Parameters Type Name Description FluentValidation.Results.ValidationResult result The result of running a validator. String message An error message. Returns Type Description Result An instance of type Result that does not contain a value. Remarks Used in situations where the consumer provides invalid data."
  },
  "api/SimpleResults.SRFluentValidationResultExtensions.IsFailed.html": {
    "href": "api/SimpleResults.SRFluentValidationResultExtensions.IsFailed.html",
    "title": "Method IsFailed | SimpleResults",
    "keywords": "Method IsFailed | Improve this Doc View Source IsFailed(ValidationResult) Checks if the validation result is failed. Declaration public static bool IsFailed(this ValidationResult result) Parameters Type Name Description FluentValidation.Results.ValidationResult result The result of running a validator. Returns Type Description Boolean true if the validation result is failed; otherwise false ."
  },
  "api/SimpleResults.SRModelStateDictionaryExtensions.BadRequest.html": {
    "href": "api/SimpleResults.SRModelStateDictionaryExtensions.BadRequest.html",
    "title": "Method BadRequest | SimpleResults",
    "keywords": "Method BadRequest | Improve this Doc View Source BadRequest(ModelStateDictionary) Represents a validation error that prevents the controller action from completing. Declaration public static BadRequestObjectResult BadRequest(this ModelStateDictionary modelState) Parameters Type Name Description ModelStateDictionary modelState The ModelStateDictionary containing errors to be returned to the client. Returns Type Description BadRequestObjectResult An instance of type BadRequestObjectResult that contains an instance of type Result . Remarks Used in situations where the consumer provides invalid data. | Improve this Doc View Source BadRequest(ModelStateDictionary, String) Represents a validation error that prevents the controller action from completing. Declaration public static BadRequestObjectResult BadRequest(this ModelStateDictionary modelState, string message) Parameters Type Name Description ModelStateDictionary modelState The ModelStateDictionary containing errors to be returned to the client. String message An error message. Returns Type Description BadRequestObjectResult An instance of type BadRequestObjectResult that contains an instance of type Result . Remarks Used in situations where the consumer provides invalid data."
  },
  "api/SimpleResults.SRModelStateDictionaryExtensions.html": {
    "href": "api/SimpleResults.SRModelStateDictionaryExtensions.html",
    "title": "Class SRModelStateDictionaryExtensions | SimpleResults",
    "keywords": "Class SRModelStateDictionaryExtensions Contains extension methods that convert an instance of ModelStateDictionary into an instance of type Result . Inheritance Object SRModelStateDictionaryExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.AspNetCore.dll Syntax public static class SRModelStateDictionaryExtensions Methods Name Description BadRequest(ModelStateDictionary) Represents a validation error that prevents the controller action from completing. BadRequest(ModelStateDictionary, String) Represents a validation error that prevents the controller action from completing. Invalid(ModelStateDictionary) Represents a validation error that prevents the controller action from completing. Invalid(ModelStateDictionary, String) Represents a validation error that prevents the controller action from completing. IsFailed(ModelStateDictionary) Checks if the model state is failed."
  },
  "api/SimpleResults.SRModelStateDictionaryExtensions.Invalid.html": {
    "href": "api/SimpleResults.SRModelStateDictionaryExtensions.Invalid.html",
    "title": "Method Invalid | SimpleResults",
    "keywords": "Method Invalid | Improve this Doc View Source Invalid(ModelStateDictionary) Represents a validation error that prevents the controller action from completing. Declaration public static Result Invalid(this ModelStateDictionary modelState) Parameters Type Name Description ModelStateDictionary modelState The ModelStateDictionary containing errors to be returned to the client. Returns Type Description Result An instance of type Result that does not contain a value. Remarks Used in situations where the consumer provides invalid data. | Improve this Doc View Source Invalid(ModelStateDictionary, String) Represents a validation error that prevents the controller action from completing. Declaration public static Result Invalid(this ModelStateDictionary modelState, string message) Parameters Type Name Description ModelStateDictionary modelState The ModelStateDictionary containing errors to be returned to the client. String message An error message. Returns Type Description Result An instance of type Result that does not contain a value. Remarks Used in situations where the consumer provides invalid data."
  },
  "api/SimpleResults.SRModelStateDictionaryExtensions.IsFailed.html": {
    "href": "api/SimpleResults.SRModelStateDictionaryExtensions.IsFailed.html",
    "title": "Method IsFailed | SimpleResults",
    "keywords": "Method IsFailed | Improve this Doc View Source IsFailed(ModelStateDictionary) Checks if the model state is failed. Declaration public static bool IsFailed(this ModelStateDictionary modelState) Parameters Type Name Description ModelStateDictionary modelState The model state to be validated. Returns Type Description Boolean true if the model state is failed; otherwise false ."
  },
  "api/SimpleResults.TranslateResultToActionResultAttribute.html": {
    "href": "api/SimpleResults.TranslateResultToActionResultAttribute.html",
    "title": "Class TranslateResultToActionResultAttribute | SimpleResults",
    "keywords": "Class TranslateResultToActionResultAttribute Translates the Result object to an ActionResult . Result object can be: Result<T> ListedResult<T> PagedResult<T> Result A subtype of ResultBase . Inheritance Object Attribute ActionFilterAttribute TranslateResultToActionResultAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuting(ActionExecutingContext) ActionFilterAttribute.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : SimpleResults Assembly : SimpleResults.AspNetCore.dll Syntax public class TranslateResultToActionResultAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Methods Name Description OnActionExecuted(ActionExecutedContext) Translates the Result object into a corresponding HTTP status code. This translation occurs after a controller action is executed."
  },
  "api/SimpleResults.TranslateResultToActionResultAttribute.OnActionExecuted.html": {
    "href": "api/SimpleResults.TranslateResultToActionResultAttribute.OnActionExecuted.html",
    "title": "Method OnActionExecuted | SimpleResults",
    "keywords": "Method OnActionExecuted | Improve this Doc View Source OnActionExecuted(ActionExecutedContext) Translates the Result object into a corresponding HTTP status code. This translation occurs after a controller action is executed. Declaration public override void OnActionExecuted(ActionExecutedContext context) Parameters Type Name Description ActionExecutedContext context Overrides ActionFilterAttribute.OnActionExecuted(ActionExecutedContext)"
  },
  "index.html": {
    "href": "index.html",
    "title": "SimpleResults | SimpleResults",
    "keywords": "SimpleResults A simple library to implement the Result pattern for returning from services. It also provides a mechanism for translating the Result object to an ActionResult or IResult . This library was inspired by Arcadis.Result . Operation Result Pattern The purpose of the Result design pattern is to give an operation (a method) the possibility to return a complex result (an object), allowing the consumer to: Access the result of an operation; in case there is one. Access the success indicator of an operation. Access the failure indicator of an operation. Access the value (data) of the result if it exists. Access the cause of the failure in case the operation was not successful. Access an error or success message. Access to a collection of error messages. Contribution Any contribution is welcome! Remember that you can contribute not only in the code, but also in the documentation or even improve the tests. Follow the steps below: Fork it Create your feature branch (git checkout -b my-new-feature) Commit your changes (git commit -am 'Added some feature') Push to the branch (git push origin my-new-feature) Create new Pull Request"
  }
}